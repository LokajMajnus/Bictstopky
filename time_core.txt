library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

entity time_core is
	Port( clk_i : in std_logic;
	counter : in std_logic;
	bl : in std_logic;
	btn_i : in std_logic_vector(3 downto 0);
	setiny : out std_logic_vector(3 downto 0);
	desetiny : out std_logic_vector(3 downto 0);
	jednotky : out std_logic_vector(3 downto 0);
	desitky : out std_logic_vector(3 downto 0));
end time_core;

architecture Behavioral of time_core is
signal counter_setiny : STD_LOGIC_VECTOR (3 downto 0) := "0000";
signal counter_desetiny : STD_LOGIC_VECTOR (3 downto 0) := "0000";
signal counter_jednotky : STD_LOGIC_VECTOR (3 downto 0) := "0000";
signal counter_desitky : STD_LOGIC_VECTOR (3 downto 0) := "0000";
signal run : STD_LOGIC := '0';

begin 
com:process (clk_i)
begin 
if clk_i='1' and clk_i'event then
	if counter_setiny = "1001" and counter_desetiny = "1001"
	and counter_jednotky = "1001" and counter_desitky = "1001" then 
	run <= '0';
		if bl = '0' then
			setiny <= (others => '1');
			desetiny <= (others => '1');
			jednotky <= (others => '1');
			desitky <= (others => '1');
		else
			setiny <= counter_setiny;
			desetiny <= counter_desetiny;
			jednotky <= counter_jednotky;
			desitky <= counter_desitky;
		end if;
	else
		setiny <= counter_setiny;
		desetiny <= counter_desetiny;
		jednotky <= counter_jednotky;
		desitky <= counter_desitky;
	end if;

	if btn_i(1) = '1' then
		run<='1';
	end if;
	if btn_i(2)= '1' then 
		run<= '0';
	end if;
end if;
end process;

cnt:process (clk_i,btn_i(0), btn_i(1), counter_setiny, counter_desetiny, counter_jednotky, counter_desitky)
begin

if btn_i(0) = '1' or (counter_setiny = "1001" and counter_desetiny = "1001" 
and counter_jednotky = "1001" and counter_desitky = "1001"
and btn_i (1) ='1') then
	counter_setiny <= (others => '0');
	counter_desetiny <= (others => '0');
	counter_jednotky <= (others => '0');
	counter_desitky <= (others => '0');
	elsif clk_i='1' and clk_i'event then
	if counter = '1' and  run = '1' then 
		counter_setiny <= counter_setiny + 1;
			if counter_setiny = "1001" then
				counter_setiny <= (others => '0');
				counter_desetiny <= counter_desetiny + 1;
					if counter_desetiny <= "1001" then 
						counter_desetiny <= (others => '0');
						counter_jednotky <= counter_jednotky +1;
							if counter_jednotky = "1001" then
								counter_jednotky <= (others => '0');
								counter_desitky <= counter_desitky + 1;
							end if;
					end if;
			end if;
	end if;
end if;
end process;
end Behavioral;